openapi: 3.1.0
info:
  version: 1.0.0
  title: 'Mercado'
  summary: 'Little aplication width lerning objective'
  description: "This document describe the operation of the Market API"
  contact:
    name: "BAUTISTA"
    email: "Batubasilio@hotmail.com"
servers:
  - url: https://localhost:8080/api/v1
paths:
  /employee:
    get:
      description: "Return all employees"
      summary: return all employees
      responses:
        200:
          description: "If the request is correct, return the object list with status 200"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employedDTO'
        404:
          description: "If the request is failed, it will return a message with the description of the error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/NotFoundMessageDTO'
        401:
          description: "If the user is unauthorized, it will return a message with the description of the error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/UnAuthorizeRequestDTO'
        400:
          description: 'If the request is bas or incorrect, it will return a message with the description of the error'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/BadRequestErrorDTO'
        500:
          description: "If the server has an internal error, it will return a message with the description of the error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/InternalErrorDTO'
    post:
      description: 'save new employee'
      summary: Create employee
      operationId: createEmployee
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employedRequestDTO'
      responses:
        200:
          description: 'if the requests is correct, the user is save and returns as data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employedDTO'
        404:
          description: "If the request is failed, it will return a message with the description of the error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/NotFoundMessageDTO'
        401:
          description: "If the user is unauthorized, it will return a message with the description of the error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/UnAuthorizeRequestDTO'
        400:
          description: 'If the request is bas or incorrect, it will return a message with the description of the error'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/BadRequestErrorDTO'
        500:
          description: "If the server has an internal error, it will return a message with the description of the error"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/InternalErrorDTO'



components:
  schemas:
    employedDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          examples: ["Bautista"]
        lastname:
          type: string
          examples: ["Basilio","Fernandez"]
        document:
          type: integer
          format: int64
    employedRequestDTO:
      type: object
      properties:
        name:
          type: string
          examples: ["Bautista"]
        lastname:
          type: string
          examples: ["Basilio","Fernandez"]
        document:
          type: integer
          format: int64
    BadRequestErrorDTO:
      type: object
      properties:
        error:
          type: string
          examples:
            - BadRequest
        message:
          type: string
          examples:
            - The request is not valid, check the params
    NotFoundMessageDTO:
      type: object
      properties:
        error:
          type: string
          examples:
            - NotFound
        message:
          type: string
          examples:
            - The resources is not avalible
    InternalErrorDTO:
      type: object
      properties:
        error:
          type: string
          examples:
            - InternalServerError
        message:
          type: string
          examples:
            - An error occurred on the server
    UnAuthorizeRequestDTO:
      type: object
      properties:
        error:
          type: string
          examples:
            - UnAuthorizeRequest
        message:
          type: string
          examples:
            - UnAuthorized User to make a request


          



